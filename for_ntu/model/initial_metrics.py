#coding:utf-8
#author:黄宏恩
import numpy as np
from tqdm import tqdm

metrics = {
    'kinetics' : ((0,1,1),(0,2,2),(0,3,3),(0,4,4),(0,5,2),(0,6,3),(0,7,4),(0,8,3),(0,9,4),
                  (0,10,5),(0,11,3),(0,12,4),(0,13,5),(0,14,1),(0,15,1),(0,16,2),(0,17,2),
                  (1,2,1),(1,3,2),(1,4,3),(1,5,1),(1,6,2),(1,7,3),(1,8,2),(1,9,3),(1,10,4),(1,11,2),
                  (1,12,3),(1,13,4),(1,14,2),(1,15,2),(1,16,3),(1,17,3),
                  (2,3,1),(2,4,2),(2,5,2),(2,6,3),(2,7,4),(2,8,1),(2,9,2),(2,10,3),(2,11,3),(2,12,4),
                  (2,13,5),(2,14,3),(2,15,3),(2,16,4),(2,17,4),
                  (3,4,1),(3,5,3),(3,6,4),(3,7,5),(3,8,2),(3,9,3),(3,10,4),(3,11,4),
                  (3,12,5),(3,13,6),(3,14,4),(3,15,4),(3,16,5),(3,17,5),
                  (4,5,4),(4,6,5),(4,7,6),(4,8,3),(4,9,4),(4,10,5),(4,11,5),(4,12,6),(4,13,7),
                  (4,14,5),(4,15,5),(4,16,6),(4,17,6),
                  (5,6,1),(5,7,2),(5,8,3),(5,9,4),(5,10,5),(5,11,1),(5,12,2),(5,13,3),(5,14,3),
                  (5,15,3),(5,16,4),(5,17,4),
                  (6,7,1),(6,8,4),(6,9,5),(6,10,6),(6,11,2),(6,12,3),(6,13,4),(6,14,4),(6,15,4),(6,16,5),(6,17,5),
                  (7,8,5),(7,9,6),(7,10,7),(7,11,3),(7,12,4),(7,13,5),(7,14,5),(7,15,5),(7,16,6),(7,17,6),
                  (8,9,1),(8,10,2),(8,11,4),(8,12,5),(8,13,6),(8,14,4),(8,15,4),(8,16,5),(8,17,5),
                  (9,10,1),(9,11,5),(9,12,6),(9,13,7),(9,14,5),(9,15,5),(9,16,6),(9,17,6),
                  (10,11,6),(10,12,7),(10,13,8),(10,14,6),(10,15,6),(10,16,7),(10,17,7),
                  (11,12,1),(11,13,2),(11,14,4),(11,15,4),(11,16,5),(11,17,5),
                  (12,13,1),(12,14,5),(12,15,5),(12,16,6),(12,17,6),
                  (13,14,6),(13,15,6),(13,16,7),(13,17,7),
                  (14,15,2),(14,16,1),(14,17,3),
                  (15,16,3),(15,17,1),
                  (16,17,4)),

    'ntu':((1,2,1),(1,3,3),(1,4,4),(1,5,3),(1,6,4),(1,7,5),(1,8,6),(1,9,3),(1,10,4),
           (1,11,5),(1,12,6),(1,13,1),(1,14,2),(1,15,3),(1,16,4),(1,17,1),(1,18,2),
           (1,19,3),(1,20,4),(1,21,2),(1,22,8),(1,23,7),(1,24,8),(1,25,7),
           (2,3,2),(2,4,3),(2,5,2),(2,6,3),(2,7,4),(2,8,5),(2,9,2),(2,10,3),(2,11,4),
           (2,12,5),(2,13,2),(2,14,3),(2,15,4),(2,16,5),(2,17,2),(2,18,3),(2,19,4),(2,20,5),
           (2,21,1),(2,22,7),(2,23,6),(2,24,7),(2,25,6),
           (3,4,1),(3,5,2),(3,6,3),(3,7,4),(3,8,5),(3,9,2),(3,10,3),(3,11,4),(3,12,5),(3,13,4),
           (3,14,5),(3,15,6),(3,16,7),(3,17,4),(3,18,5),(3,19,6),(3,20,7),(3,21,1),(3,22,7),(3,23,6),(3,24,7),(3,25,6),
           (4,5,3),(4,6,4),(4,7,5),(4,8,6),(4,9,3),(4,10,4),(4,11,5),(4,12,6),(4,13,5),
           (4,14,6),(4,15,7),(4,16,8),(4,17,5),(4,18,6),(4,19,7),(4,20,8),(4,21,2),(4,22,8),(4,23,7),(4,24,8),(4,25,7),
           (5,6,1),(5,7,2),(5,8,3),(5,9,2),(5,10,3),(5,11,4),(5,12,5),(5,13,4),(5,14,5),(5,15,6),
           (5,16,7),(5,17,4),(5,18,5),(5,19,6),(5,20,7),(5,21,1),(5,22,5),(5,23,4),(5,24,7),(5,25,6),
           (6,7,1),(6,8,2),(6,9,3),(6,10,4),(6,11,5),(6,12,6),(6,13,5),(6,14,6),(6,15,7),(6,16,8),(6,17,5),
           (6,18,6),(6,19,7),(6,20,8),(6,21,2),(6,22,4),(6,23,3),(6,24,8),(6,25,7),
           (7,8,1),(7,9,4),(7,10,5),(7,11,6),(7,12,7),(7,13,6),(7,14,7),(7,15,8),
           (7,16,9),(7,17,6),(7,18,7),(7,19,8),(7,20,9),(7,21,3),(7,22,3),(7,23,2),(7,24,9),(7,25,8),
           (8,9,5),(8,10,6),(8,11,7),(8,12,8),(8,13,7),(8,14,8),(8,15,9),(8,16,10),
           (8,17,7),(8,18,8),(8,19,9),(8,20,10),(8,21,4),(8,22,2),(8,23,1),(8,24,10),(8,25,9),
           (9,10,1),(9,11,2),(9,12,3),(9,13,4),(9,14,5),(9,15,6),(9,16,7),(9,17,4),(9,18,5),(9,19,6),(9,20,7),
           (9,21,1),(9,22,7),(9,23,6),(9,24,5),(9,25,4),
           (10,11,1),(10,12,2),(10,13,5),(10,14,6),(10,15,7),(10,16,8),(10,17,5),(10,18,6),(10,19,7),(10,20,8),
           (10,21,2),(10,22,8),(10,23,7),(10,24,4),(10,25,3),
           (11,12,1),(11,13,6),(11,14,7),(11,15,8),(11,16,9),(11,17,6),(11,18,7),
           (11,19,8),(11,20,9),(11,21,3),(11,22,9),(11,23,8),(11,24,3),(11,25,2),
           (12,13,7),(12,14,8),(12,15,9),(12,16,10),(12,17,7),(12,18,8),(12,19,9),
           (12,20,10),(12,21,4),(12,22,10),(12,23,9),(12,24,2),(12,25,1),
           (13,14,1),(13,15,2),(13,16,3),(13,17,2),(13,18,3),(13,19,4),(13,20,5),
           (13,21,3),(13,22,9),(13,23,8),(13,24,9),(13,25,8),
           (14,15,1),(14,16,2),(14,17,3),(14,18,4),(14,19,5),(14,20,6),(14,21,4),
           (14,22,10),(14,23,9),(14,24,10),(14,25,9),
           (15,16,1),(15,17,4),(15,18,5),(15,19,6),(15,20,7),(15,21,5),(15,22,11),
           (15,23,10),(15,24,11),(15,25,10),
           (16,17,5),(16,18,6),(16,19,7),(16,20,8),(16,21,6),(16,22,12),(16,23,11),(16,24,12),(16,25,11),
           (17,18,1),(17,19,2),(17,20,3),(17,21,3),(17,22,9),(17,23,8),(17,24,9),(17,25,8),
           (18,19,1),(18,20,2),(18,21,4),(18,22,10),(18,23,9),(18,24,10),(18,25,9),
           (19,20,1),(19,21,5),(19,22,11),(19,23,10),(19,24,11),(19,25,10),
           (20,21,6),(20,22,12),(20,23,11),(20,24,12),(20,25,11),
           (21,22,6),(21,23,5),(21,24,6),(21,25,5),
           (22,23,1),(22,24,12),(22,25,11),
           (23,24,11),(23,25,10),
           (24,25,1))
}


kinect_metrics=np.ones((18,18),dtype=float)
if 'kinetics' in metrics:
    for i,j,k in tqdm(metrics['kinetics']):
        kinect_metrics[i,j]=1./((k+1)*(k+1))
        kinect_metrics[j,i]=kinect_metrics[i,j]
# print(kinect_metrics,'a')

ntu_metrics =  np.ones((25,25),dtype=float)
if 'ntu' in metrics:
    for i,j,k in tqdm(metrics['ntu']):
        ntu_metrics[i-1,j-1]=1./((k+1)*(k+1))
        ntu_metrics[j-1,i-1]=ntu_metrics[i-1,j-1]
# print(ntu_metrics,'b')
